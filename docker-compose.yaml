version: '3.1'
services:
  postgres_buildly:
    container_name: postgres_buildly
    image: postgres:9.6
    environment:
      POSTGRES_DB: buildly
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - /var/lib/postgresql/data/
    restart: always

  buildly:
    entrypoint: bash /scripts/buildly_entrypoint.sh
    container_name: buildly
    image: buildly/buildly
    volumes:
      - ./scripts:/scripts
      - static-content:/static
    ports:
      - "8080:8080"
    depends_on:
      - postgres_buildly
    environment:
      DJANGO_SETTINGS_MODULE: "buildly.settings.production"
      ALLOWED_HOSTS: "*"
      CORS_ORIGIN_WHITELIST: "*"
      DATABASE_ENGINE: "postgresql"
      DATABASE_NAME: "buildly"
      DATABASE_USER: "root"
      DATABASE_PASSWORD: "root"
      DATABASE_HOST: "postgres_buildly"
      DATABASE_PORT: "5432"
      DEFAULT_ORG: "Default Organization"
      DOCUMENTATION_URL: "https://github.com/buildlyio/buildly-core/blob/master/README.md"
      API_URL: "/api"
      JWT_ISSUER: "buildly"
      JWT_PRIVATE_KEY_RSA_BUILDLY: |-
        -----BEGIN RSA PRIVATE KEY-----
        MIIBOwIBAAJBALFc9NFZaOaSwUMPNektbtJqEjYZ6IRBqhqvJu1hKPYn9HYd75c0
        gIDYHJ9lb7QwQvg44aO27104rDK0xSstzL0CAwEAAQJAe5z5096oyeqGX6J+RGGx
        11yuDJ7J+0N4tthUHSWWUtgkd19NvmTM/mVLmPCzZHgNUT+aWUKsQ84+jhru/NQD
        0QIhAOHOzFmjxjTAR1jspn6YtJBKQB40tvT6WEvm2mKm0aD7AiEAyRPwXyZf3JT+
        M6Ui0Mubs7Qb/E4g1d/kVL+o/XoZC6cCIQC+nKzPtnooKW+Q1yOslgdGDgeV9/XB
        Ulqap+MNh7hJZQIgZNaM+wqhlFtbx8aO2SrioJI4XqVHrjojpaSgOM3cdY0CIQDB
        Q6ckOaDV937acmWuiZhxuG2euNLwNbMldtCV5ADo/g==
        -----END RSA PRIVATE KEY-----
      JWT_PUBLIC_KEY_RSA_BUILDLY: |-
        -----BEGIN PUBLIC KEY-----
        MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALFc9NFZaOaSwUMPNektbtJqEjYZ6IRB
        qhqvJu1hKPYn9HYd75c0gIDYHJ9lb7QwQvg44aO27104rDK0xSstzL0CAwEAAQ==
        -----END PUBLIC KEY-----
      SOCIAL_AUTH_GITHUB_REDIRECT_URL: "https://localhost:8000/complete/github"
      SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URL: "https://localhost:8000/complete/google-oauth2"
      SOCIAL_AUTH_LOGIN_REDIRECT_URL: "http://localhost:8080/"
      SOCIAL_AUTH_MICROSOFT_GRAPH_REDIRECT_URL: "https://localhost:8000/complete/microsoft-graph"
      ACCESS_TOKEN_EXPIRE_SECONDS: "86400"
      SECRET_KEY: "ek*)b=mtcc7q1cym@oox(lyrz1ncz-(w+(#&u7l-&)7a8wv#_k"
      OAUTH_CLIENT_ID: "wkXLlC9h3k0jxIx7oLllxpFVU89Dxgi7O8FYZyfX"
      OAUTH_CLIENT_SECRET: "KiKRft8MajLabQId7pjSsa3OfvJAXN9NENi0tVRTX3Vbthr6iClEDZZtbyGuD9M8UbKpK2E8R4xJYUolZxg1nVa1iZwhQPi5ionOKdpIs4de2bmUaZ0qWi4MdBmdwDvF"
      USE_PASSWORD_USER_ATTRIBUTE_SIMILARITY_VALIDATOR: "True"
      USE_PASSWORD_MINIMUM_LENGTH_VALIDATOR: "True"
      PASSWORD_MINIMUM_LENGTH: "6"
      USE_PASSWORD_COMMON_VALIDATOR: "True"
      USE_PASSWORD_NUMERIC_VALIDATOR: "True"

  postgres_location_service:
    container_name: postgres_location_service
    healthcheck:
      test: "pg_isready -h localhost -p 5432 -q -U postgres"
      interval: 3s
      timeout: 5s
      retries: 5
    image: postgres:10.4-alpine
    environment:
      POSTGRES_DB: location_service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - /var/lib/postgresql/data/
    restart: always

  location_service:
    container_name: locationservice
    image: msradam/location_service
    ports:
      - "8083:8080"
    depends_on:
      - postgres_location_service
    environment:
      ALLOWED_HOSTS: "*"
      CORS_ORIGIN_WHITELIST: "*"
      DATABASE_ENGINE: "postgresql"
      DATABASE_NAME: "location_service"
      DATABASE_USER: "root"
      DATABASE_PASSWORD: "root"
      DATABASE_HOST: "postgres_location_service"
      DATABASE_PORT: "5432"
      DEBUG: "True"
      JWT_PUBLIC_KEY_RSA_BUILDLY: |-
        -----BEGIN PUBLIC KEY-----
        MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALFc9NFZaOaSwUMPNektbtJqEjYZ6IRB
        qhqvJu1hKPYn9HYd75c0gIDYHJ9lb7QwQvg44aO27104rDK0xSstzL0CAwEAAQ==
        -----END PUBLIC KEY-----
      SECRET_KEY: "ab-db=mtcc7q1cym@oox(lyrz1ncz-(w+(#&u7l-&)7a8wvxyz"
      STATIC_ROOT: /static/


  postgres_products_service:
    container_name: postgres_products_service
    healthcheck:
      test: "pg_isready -h localhost -p 5432 -q -U postgres"
      interval: 3s
      timeout: 5s
      retries: 5
    image: postgres:10.4-alpine
    environment:
      POSTGRES_DB: products_service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - /var/lib/postgresql/data/
    restart: always

  products_service:
    container_name: productsservice
    image: msradam/products_service
    ports:
      - "8085:8080"
    depends_on:
      - postgres_products_service
    environment:
      ALLOWED_HOSTS: "*"
      CORS_ORIGIN_WHITELIST: "*"
      DATABASE_ENGINE: "postgresql"
      DATABASE_NAME: "products_service"
      DATABASE_USER: "root"
      DATABASE_PASSWORD: "root"
      DATABASE_HOST: "postgres_products_service"
      DATABASE_PORT: "5432"
      DEBUG: "False"
      DJANGO_SETTINGS_MODULE: "products_service.settings.production"
      JWT_PUBLIC_KEY_RSA_BUILDLY: |-
        -----BEGIN PUBLIC KEY-----
        MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALFc9NFZaOaSwUMPNektbtJqEjYZ6IRB
        qhqvJu1hKPYn9HYd75c0gIDYHJ9lb7QwQvg44aO27104rDK0xSstzL0CAwEAAQ==
        -----END PUBLIC KEY-----
      SECRET_KEY: "oxcdb=mtcc7q1cym@oox(lyrz1ncz-(w+(#&u7l-&)7a8wvxyz"

  buildly-react-template:
    container_name: buildly-react-template
    image: buildly/buildly-react-template
    ports:
      - "9001:9000"
    depends_on:
      - buildly
    environment:
      ALLOWED_HOSTS: "*"
      CORS_ORIGIN_WHITELIST: "*"
      OAUTH_CLIENT_ID: "wkXLlC9h3k0jxIx7oLllxpFVU89Dxgi7O8FYZyfX"
      PRODUCTION: "true"
      API_URL: "http://localhost:8080/"
      OAUTH_TOKEN_URL: "http://localhost:8080/oauth/token/"

  robot_tests:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: robot-tests-platform
    image: run-robot-tests-robot-tests
    entrypoint: bash /robot-tests-volume/src/robot-tests-run-script.sh docker
    volumes:
      - ./:/robot-tests-volume/src
      - ./output:/output
    environment:
      TEST_PATH: robot-tests/

volumes:
  static-content:

